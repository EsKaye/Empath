name: CI
on:
  pull_request:
  push:
    branches: [ main ]
permissions:
  contents: read
jobs:
  ts-node:
    if: ${{ hashFiles('package.json') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'pnpm' }
      - run: corepack enable
      - run: |
          if [ -f pnpm-lock.yaml ]; then pnpm i --frozen-lockfile;
          elif [ -f package-lock.json ]; then npm ci;
          else npm i; fi
      - run: npm run lint --if-present || pnpm lint || true
      - run: npm run typecheck --if-present || pnpm typecheck || true
      - run: npm test --if-present || pnpm test || true
      - run: npm run build --if-present || pnpm build || true

  python:
    if: ${{ hashFiles('pyproject.toml') != '' || hashFiles('requirements.txt') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with: { python-version: '3.11' }
      - run: |
          pip install -U pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest black ruff || true
      - run: ruff check . || true
      - run: pytest -q || true

  dotnet:
    if: ${{ hashFiles('*.sln') != '' || hashFiles('*.csproj') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: '8.0.x' }
      - run: dotnet restore
      - run: dotnet build --configuration Release --no-restore
      - run: dotnet test --no-build --verbosity normal || true

  swift:
    if: ${{ hashFiles('Package.swift') != '' || hashFiles('*.xcodeproj/project.pbxproj') != '' }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build (SPM)
        run: |
          if [ -f Package.swift ]; then swift build -c release; fi
      - name: Xcode build (if Xcode project)
        run: |
          if ls *.xcodeproj >/dev/null 2>&1; then xcodebuild -scheme "$(ls *.xcodeproj | sed 's/.xcodeproj//')" -configuration Release -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 15' build; fi

  lua:
    if: ${{ hashFiles('**/*.lua') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Lua & tools
        run: |
          sudo apt-get update && sudo apt-get install -y lua5.4 luarocks
          sudo luarocks install luacheck
          sudo luarocks install busted || true
      - name: Lint
        run: luacheck . || true
      - name: Test (busted)
        run: |
          if compgen -G "spec/**/*_spec.lua" > /dev/null; then busted -q; else echo "No Lua tests"; fi

  godot:
    if: ${{ hashFiles('project.godot') != '' }}
    runs-on: ubuntu-latest
    container: ghcr.io/barichello/godot-ci:4.2
    steps:
      - uses: actions/checkout@v4
      - name: Validate project
        run: godot --headless --check-only || true

  shell:
    if: ${{ hashFiles('**/*.sh') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ludeeus/action-shellcheck@2.0.0

  powershell:
    if: ${{ hashFiles('**/*.ps1') != '' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PSScriptAnalyzer
        run: pwsh -NoLogo -Command "Install-Module PSScriptAnalyzer -Force; Invoke-ScriptAnalyzer -Path . -Recurse -Severity Warning" || true
